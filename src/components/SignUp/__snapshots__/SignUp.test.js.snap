// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Signup defaults should match snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SignUp />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="login-div"
      >
        <Link
          replace={false}
          to="/"
        >
          <button
            className="home-link"
          />
        </Link>
        <form
          autoComplete="off"
          onSubmit={[Function]}
        >
          <h4
            className="form-title"
          >
            Please sign up
          </h4>
          <label>
            name
            <input
              name="name"
              onChange={[Function]}
              required={true}
              type="name"
            />
          </label>
          <label>
            email
            <input
              name="email"
              onChange={[Function]}
              required={true}
              type="email"
            />
          </label>
          <label>
            password
            <input
              name="password"
              onChange={[Function]}
              required={true}
              type="password"
            />
          </label>
          <input
            className="submit-button"
            type="submit"
          />
        </form>
        <Link
          className="sign-up-login-link"
          replace={false}
          to="/login"
        >
          Login
        </Link>
        <p
          className="response"
        >
          
        </p>
      </div>,
      "className": "overlay-div",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Link
            replace={false}
            to="/"
          >
            <button
              className="home-link"
            />
          </Link>,
          <form
            autoComplete="off"
            onSubmit={[Function]}
          >
            <h4
              className="form-title"
            >
              Please sign up
            </h4>
            <label>
              name
              <input
                name="name"
                onChange={[Function]}
                required={true}
                type="name"
              />
            </label>
            <label>
              email
              <input
                name="email"
                onChange={[Function]}
                required={true}
                type="email"
              />
            </label>
            <label>
              password
              <input
                name="password"
                onChange={[Function]}
                required={true}
                type="password"
              />
            </label>
            <input
              className="submit-button"
              type="submit"
            />
          </form>,
          <Link
            className="sign-up-login-link"
            replace={false}
            to="/login"
          >
            Login
          </Link>,
          <p
            className="response"
          >
            
          </p>,
        ],
        "className": "login-div",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <button
              className="home-link"
            />,
            "replace": false,
            "to": "/",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "home-link",
            },
            "ref": null,
            "rendered": null,
            "type": "button",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "autoComplete": "off",
            "children": Array [
              <h4
                className="form-title"
              >
                Please sign up
              </h4>,
              Array [
                <label>
                  name
                  <input
                    name="name"
                    onChange={[Function]}
                    required={true}
                    type="name"
                  />
                </label>,
                <label>
                  email
                  <input
                    name="email"
                    onChange={[Function]}
                    required={true}
                    type="email"
                  />
                </label>,
                <label>
                  password
                  <input
                    name="password"
                    onChange={[Function]}
                    required={true}
                    type="password"
                  />
                </label>,
              ],
              <input
                className="submit-button"
                type="submit"
              />,
            ],
            "onSubmit": [Function],
          },
          "ref": [Function],
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Please sign up",
                "className": "form-title",
              },
              "ref": null,
              "rendered": "Please sign up",
              "type": "h4",
            },
            Object {
              "instance": null,
              "key": "name",
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  "name",
                  <input
                    name="name"
                    onChange={[Function]}
                    required={true}
                    type="name"
                  />,
                ],
              },
              "ref": null,
              "rendered": Array [
                "name",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "name": "name",
                    "onChange": [Function],
                    "required": true,
                    "type": "name",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
              ],
              "type": "label",
            },
            Object {
              "instance": null,
              "key": "email",
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  "email",
                  <input
                    name="email"
                    onChange={[Function]}
                    required={true}
                    type="email"
                  />,
                ],
              },
              "ref": null,
              "rendered": Array [
                "email",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "name": "email",
                    "onChange": [Function],
                    "required": true,
                    "type": "email",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
              ],
              "type": "label",
            },
            Object {
              "instance": null,
              "key": "password",
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  "password",
                  <input
                    name="password"
                    onChange={[Function]}
                    required={true}
                    type="password"
                  />,
                ],
              },
              "ref": null,
              "rendered": Array [
                "password",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "name": "password",
                    "onChange": [Function],
                    "required": true,
                    "type": "password",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
              ],
              "type": "label",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "submit-button",
                "type": "submit",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
          ],
          "type": "form",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "Login",
            "className": "sign-up-login-link",
            "replace": false,
            "to": "/login",
          },
          "ref": null,
          "rendered": "Login",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "",
            "className": "response",
          },
          "ref": null,
          "rendered": "",
          "type": "p",
        },
      ],
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="login-div"
        >
          <Link
            replace={false}
            to="/"
          >
            <button
              className="home-link"
            />
          </Link>
          <form
            autoComplete="off"
            onSubmit={[Function]}
          >
            <h4
              className="form-title"
            >
              Please sign up
            </h4>
            <label>
              name
              <input
                name="name"
                onChange={[Function]}
                required={true}
                type="name"
              />
            </label>
            <label>
              email
              <input
                name="email"
                onChange={[Function]}
                required={true}
                type="email"
              />
            </label>
            <label>
              password
              <input
                name="password"
                onChange={[Function]}
                required={true}
                type="password"
              />
            </label>
            <input
              className="submit-button"
              type="submit"
            />
          </form>
          <Link
            className="sign-up-login-link"
            replace={false}
            to="/login"
          >
            Login
          </Link>
          <p
            className="response"
          >
            
          </p>
        </div>,
        "className": "overlay-div",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <Link
              replace={false}
              to="/"
            >
              <button
                className="home-link"
              />
            </Link>,
            <form
              autoComplete="off"
              onSubmit={[Function]}
            >
              <h4
                className="form-title"
              >
                Please sign up
              </h4>
              <label>
                name
                <input
                  name="name"
                  onChange={[Function]}
                  required={true}
                  type="name"
                />
              </label>
              <label>
                email
                <input
                  name="email"
                  onChange={[Function]}
                  required={true}
                  type="email"
                />
              </label>
              <label>
                password
                <input
                  name="password"
                  onChange={[Function]}
                  required={true}
                  type="password"
                />
              </label>
              <input
                className="submit-button"
                type="submit"
              />
            </form>,
            <Link
              className="sign-up-login-link"
              replace={false}
              to="/login"
            >
              Login
            </Link>,
            <p
              className="response"
            >
              
            </p>,
          ],
          "className": "login-div",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <button
                className="home-link"
              />,
              "replace": false,
              "to": "/",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "home-link",
              },
              "ref": null,
              "rendered": null,
              "type": "button",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "autoComplete": "off",
              "children": Array [
                <h4
                  className="form-title"
                >
                  Please sign up
                </h4>,
                Array [
                  <label>
                    name
                    <input
                      name="name"
                      onChange={[Function]}
                      required={true}
                      type="name"
                    />
                  </label>,
                  <label>
                    email
                    <input
                      name="email"
                      onChange={[Function]}
                      required={true}
                      type="email"
                    />
                  </label>,
                  <label>
                    password
                    <input
                      name="password"
                      onChange={[Function]}
                      required={true}
                      type="password"
                    />
                  </label>,
                ],
                <input
                  className="submit-button"
                  type="submit"
                />,
              ],
              "onSubmit": [Function],
            },
            "ref": [Function],
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Please sign up",
                  "className": "form-title",
                },
                "ref": null,
                "rendered": "Please sign up",
                "type": "h4",
              },
              Object {
                "instance": null,
                "key": "name",
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    "name",
                    <input
                      name="name"
                      onChange={[Function]}
                      required={true}
                      type="name"
                    />,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  "name",
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "name": "name",
                      "onChange": [Function],
                      "required": true,
                      "type": "name",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "input",
                  },
                ],
                "type": "label",
              },
              Object {
                "instance": null,
                "key": "email",
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    "email",
                    <input
                      name="email"
                      onChange={[Function]}
                      required={true}
                      type="email"
                    />,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  "email",
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "name": "email",
                      "onChange": [Function],
                      "required": true,
                      "type": "email",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "input",
                  },
                ],
                "type": "label",
              },
              Object {
                "instance": null,
                "key": "password",
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    "password",
                    <input
                      name="password"
                      onChange={[Function]}
                      required={true}
                      type="password"
                    />,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  "password",
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "name": "password",
                      "onChange": [Function],
                      "required": true,
                      "type": "password",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "input",
                  },
                ],
                "type": "label",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "submit-button",
                  "type": "submit",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
            ],
            "type": "form",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Login",
              "className": "sign-up-login-link",
              "replace": false,
              "to": "/login",
            },
            "ref": null,
            "rendered": "Login",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "",
              "className": "response",
            },
            "ref": null,
            "rendered": "",
            "type": "p",
          },
        ],
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
